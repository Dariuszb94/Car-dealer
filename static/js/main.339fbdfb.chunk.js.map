{"version":3,"sources":["Components/Search.js","Components/Header.js","Components/Menu.js","Components/Copyright.js","Components/Slider.js","Components/Why.js","Components/Home.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","state","className","type","placeholder","fontSize","Component","Header","href","Menu","exact","to","activeClassName","Copyright","Slider","Why","Home","About","class","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gRAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0LAoBjB,OACE,yBAAKC,UAAU,mBACb,iCACE,2BAAOA,UAAU,cACfC,KAAK,OACLC,YAAY,YAGhB,iCACE,4BAAQF,UAAU,gBAAe,kBAAC,IAAD,CAAYG,SAAS,iB,GA9B5BC,aCEfC,E,kDACnB,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0LAoBjB,OACE,yBAAKC,UAAU,mBACb,6BAASA,UAAU,SACjB,4BAAI,uBAAGM,KAAK,KAAKN,UAAU,QAAvB,cAEN,kBAAC,EAAD,W,GA1B4BI,a,QCEfG,E,kDACnB,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0LAoBjB,OACE,yBAAKC,UAAU,iBACb,wBAAIA,UAAU,YACZ,4BAAI,uBAAGM,KAAK,MAAK,kBAAC,IAAD,CAASE,OAAK,EAACC,GAAG,IAAIC,gBAAgB,UAAtC,UACjB,4BAAI,uBAAGJ,KAAK,MAAK,kBAAC,IAAD,CAASG,GAAG,SAASC,gBAAgB,UAArC,YACjB,4BAAI,uBAAGJ,KAAK,MAAR,QACJ,4BAAI,uBAAGA,KAAK,MAAR,mB,GA3BoBF,aCLbO,E,kDACnB,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0LAoBjB,OACE,+D,GAtBiCK,aCAlBQ,E,kDACnB,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0LAoBjB,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,mBACb,iCACE,iCACE,4CAEF,iCACE,mDAEF,iCACE,4CAGJ,6BAASA,UAAU,eACjB,iCAAS,4BAAQA,UAAU,cAAlB,oB,GApCeI,a,mDCGfS,E,kDACnB,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0LAoBjB,OACE,yBAAKC,UAAU,cACb,iCAEE,iCAAS,kBAAC,IAAD,CAAqBA,UAAU,WAA/B,MACT,6BAASA,UAAU,WAAnB,sBAEF,iCAEE,iCAAS,kBAAC,IAAD,CAAoBA,UAAU,WAA9B,MACT,6BAASA,UAAU,WAAnB,aAEF,iCAEE,iCAAS,kBAAC,IAAD,CAAWA,UAAU,aAC9B,6BAASA,UAAU,WAAnB,yB,GApCuBI,aCDZU,E,kDACnB,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0LAoBjB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAxB0BK,aCDbW,E,kDACnB,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0LAoBjB,OACE,yBAAKiB,MAAM,kBAAX,uB,GAtB6BZ,a,OCyBpBa,MAff,WACE,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,OAAK,EAACU,KAAK,QAAQC,UAAWL,IACrC,kBAAC,IAAD,CAAOI,KAAK,SAASC,UAAWJ,KAElC,kBAAC,EAAD,QCVYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOR,KAAK,IAAIC,UAAWF,KAE3BU,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.339fbdfb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  handleChange() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"searchContainer\">\r\n        <section>\r\n          <input className=\"searchInput\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n          />\r\n        </section>\r\n        <section>\r\n          <button className=\"searchButton\"><SearchIcon fontSize=\"small\" /></button>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport Search from './Search';\r\n\r\n\r\nexport default class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  handleChange() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"headerContainer\">\r\n        <section className=\"title\">\r\n          <h1><a href=\"/#\" className=\"logo\">Lux-cars</a></h1>\r\n        </section>\r\n        <Search/>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  Switch\r\n} from \"react-router-dom\";\r\nexport default class Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  handleChange() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menuContainer\">\r\n        <ul className=\"menuList\">\r\n          <li><a href=\"/#\"><NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink></a></li>\r\n          <li><a href=\"/#\"><NavLink to=\"/about\" activeClassName=\"active\">Offers</NavLink></a></li>\r\n          <li><a href=\"/#\">Map</a></li>\r\n          <li><a href=\"/#\">About us</a></li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nexport default class Copyright extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  handleChange() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer>Â© 2020 Dariusz Berer</footer>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nexport default class Slider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  handleChange() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"slider\">\r\n        <div className=\"sliderContainer\">\r\n          <section>\r\n            <article>\r\n              <h2>Good prices</h2>\r\n            </article>\r\n            <article>\r\n              <h3>Accident-free cars</h3>\r\n            </article>\r\n            <article>\r\n              <h3>Guaranties</h3>\r\n            </article>\r\n          </section>\r\n          <section className=\"slideButton\">\r\n            <article><button className=\"moreButton\">See more</button></article>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport LocalGasStationIcon from '@material-ui/icons/LocalGasStation';\r\nimport AirportShuttleIcon from '@material-ui/icons/AirportShuttle';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nexport default class Why extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  handleChange() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"whySection\">\r\n        <section>\r\n         \r\n          <article><LocalGasStationIcon className=\"whyIcon\"> </LocalGasStationIcon></article>\r\n          <article className=\"whyText\">Good fuel economy</article>\r\n        </section>\r\n        <section>\r\n          \r\n          <article><AirportShuttleIcon className=\"whyIcon\"> </AirportShuttleIcon></article>\r\n          <article className=\"whyText\">Spaceous</article>\r\n        </section>\r\n        <section>\r\n          \r\n          <article><SpeedIcon className=\"whyIcon\"></SpeedIcon></article>\r\n          <article className=\"whyText\">Speed and power</article>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport Slider from './Slider';\r\nimport Why from './Why'\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  handleChange() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Slider/>\r\n        <Why/>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class About extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  handleChange() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"aboutContainer\">\r\nsssssssssssssss\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Menu from './Components/Menu';\nimport Copyright from './Components/Copyright';\nimport Home from './Components/Home';\nimport About from './Components/About';\nimport {\n  Route,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Menu/>\n\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n        <Copyright/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n  <Route path=\"/\" component={App} />\n</BrowserRouter>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}